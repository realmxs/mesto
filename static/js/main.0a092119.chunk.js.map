{"version":3,"sources":["components/Header.js","utils/api.js","utils/constants.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/PopupWithImage.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","props","className","src","logo","alt","lang","api","baseUrl","headers","this","_baseUrl","_headers","console","log","res","ok","json","Promise","reject","status","fetch","then","_response","name","description","method","body","JSON","stringify","about","title","link","cardId","avatar","authorization","Card","card","onClick","click","type","likes","length","Main","React","useState","setName","setDescription","setAvatar","cards","setCards","useEffect","getUserInfo","user","catch","err","getDefaultCards","editAvatar","editProfile","addPlace","map","key","_id","showPic","Footer","PopupWithForm","isOpen","id","size","noValidate","close","children","submitButtonText","PopupWithImage","cardInfo","App","isAvatarPopupOpen","setAvatarPopupOpen","isEditProfilePopupOpen","setProfileEditPopupOpen","isAddCardPopupOpen","setAddCardPopupOpen","selectedCard","setSelectedCard","imageInfo","setImageInfo","closePopup","placeholder","required","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.0a092119.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <img className=\"logo\" src={logo} alt=\"Mesto Russia\" lang=\"en\" />\n    </header>\n  );\n}\n\nexport default Header\n","import { loginInfo } from './constants.js'\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n    console.log(this._baseUrl)\n  }\n\n  _response(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`error${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._response);\n  }\n\n  getDefaultCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._response);\n  }\n\n  updateUserInfo({ name, description }) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: description,\n      }),\n    }).then(this._response);\n  }\n\n  addNewCard({ title, link }) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: title,\n        link: link,\n      }),\n    }).then(this._response);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._response);\n  }\n\n  setLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: \"PUT\",\n      headers: this._headers,\n    }).then(this._response);\n  }\n\n  removeLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._response);\n  }\n\n  setUserAvatar({ avatar }) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar,\n      }),\n    }).then(this._response);\n  }\n}\n\nexport const api = new Api(loginInfo)\n","export const loginInfo = {\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-12\",\n  headers: {\n    authorization: \"246d132c-15dc-4567-a2e3-3aa37ea260d6\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n\n","import React from 'react';\n\nfunction Card(props) {\n  const card = props.card;\n  function clickOnCard() {\n    props.click(card)\n  }\n  return (\n    <div className=\"card\">\n      <img onClick={clickOnCard} className=\"card__image\" alt=\"фото\" src={card.link} />\n      <button className=\"card__delete-button card__delete-button_visiable\"></button>\n      <div className=\"card__info\">\n        <h2 className=\"card__title\">{card.name}</h2>\n        <div className=\"card__like-wrapper\">\n          <button className=\"card__like-button\" type=\"button\"></button>\n          <p className=\"card__like-counter\">{card.likes.length}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;\n","import React from \"react\";\nimport { api } from \"../utils/api.js\";\nimport Card from \"./Card.js\";\n\nfunction Main(props) {\n  const [name, setName] = React.useState();\n  const [description, setDescription] = React.useState();\n  const [avatar, setAvatar] = React.useState();\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((user) => {\n        setName(user.name);\n        setDescription(user.about);\n        setAvatar(user.avatar);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getDefaultCards()\n      .then((cards) => {\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__container\">\n          <button onClick={props.editAvatar} className=\"profile__avatar-button\">\n            <img\n              className=\"profile__avatar\"\n              alt=\"Ваше фото\"\n              src={avatar}\n            />\n          </button>\n          <div className=\"profile__info\">\n            <div className=\"profile__wrapper\">\n              <h1 className=\"profile__title\">{name}</h1>\n              <button\n                className=\"profile__edit-button\"\n                type=\"button\"\n                onClick={props.editProfile}\n              ></button>\n            </div>\n            <p className=\"profile__subtitle\">{description}</p>\n          </div>\n        </div>\n        <button\n          className=\"open-newcard-popup-button\"\n          onClick={props.addPlace}\n        ></button>\n      </section>\n\n      <section className=\"cards-container\">\n        {cards.map((card) => (\n          <Card key={card._id} card={card} click={props.showPic} />\n        ))}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer(props) {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\" lang=\"en\">&copy;2020 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <div className={`popup ${props.isOpen && 'popup_opened'}`} id={props.id}>\n      <form className={`popup__container popup__container_${props.size}`} noValidate>\n        <button className=\"popup__close-button\" id=\"close-avatar-popup-button\" type=\"button\" onClick={props.close}></button>\n        <h2 className=\"popup__title\">{props.title}</h2>\n        {props.children}\n        <button className=\"popup__submit-button\" type=\"submit\">{props.submitButtonText}</button>\n      </form>\n    </div>\n  )\n}\n\nexport default PopupWithForm;\n","import React from 'react';\n\nfunction PopupWithImage(props) {\n  return (\n    <div className={`popup ${props.isOpen && 'popup_opened'}`} id=\"pic-popup\">\n      <div className=\"popup__wrapper\">\n        <img className=\"popup__image\" alt=\"фото\" src={props.cardInfo.link} />\n        <button onClick={props.close} className=\"popup__close-button\" id=\"close-picpopup\" type=\"button\"></button>\n        <h2 className=\"popup__image-title\">{props.cardInfo.name}</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default PopupWithImage;\n","import React from \"react\";\nimport Header from \"./Header.js\";\nimport Main from \"./Main.js\";\nimport Footer from \"./Footer.js\";\nimport PopupWithForm from \"./PopupWithForm.js\";\nimport PopupWithImage from \"./PopupWithImage.js\";\n\nfunction App() {\n  const [isAvatarPopupOpen, setAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setProfileEditPopupOpen] = React.useState(\n    false\n  );\n  const [isAddCardPopupOpen, setAddCardPopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [imageInfo, setImageInfo] = React.useState({});\n\n  function handleAvatarClick() {\n    setAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setProfileEditPopupOpen(true);\n  }\n\n  function handleAddCardClick() {\n    setAddCardPopupOpen(true);\n  }\n\n  function closePopup() {\n    setAvatarPopupOpen(false);\n    setProfileEditPopupOpen(false);\n    setAddCardPopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  function handleCardClick() {\n    setSelectedCard(true);\n  }\n\n  const openPicPopup = (card) => {\n    handleCardClick();\n    setImageInfo(card);\n  };\n\n  return (\n    <>\n      <Header />\n      <Main\n        editAvatar={handleAvatarClick}\n        editProfile={handleEditProfileClick}\n        addPlace={handleAddCardClick}\n        showPic={openPicPopup}\n      />\n      <Footer />\n      <PopupWithForm\n        isOpen={isAvatarPopupOpen}\n        id=\"avatar-popup\"\n        size=\"medium\"\n        title=\"Обновить аватар\"\n        close={closePopup}\n        submitButtonText=\"Обновить\"\n      >\n        <div className=\"popup__input-wrapper\">\n          <input\n            type=\"url\"\n            placeholder=\"Ссылка на изображение\"\n            className=\"popup__input\"\n            id=\"input-avatar-link\"\n            required\n          />\n          <span\n            className=\"popup__error-text\"\n            id=\"input-avatar-link-error\"\n          ></span>\n        </div>\n      </PopupWithForm>\n      <PopupWithForm\n        isOpen={isEditProfilePopupOpen}\n        id=\"profile-edit-popup\"\n        size=\"large\"\n        title=\"Изменить данные\"\n        close={closePopup}\n        submitButtonText=\"Сохранить\"\n      >\n        <fieldset className=\"popup__fieldset\">\n          <div className=\"popup__input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Имя\"\n              type=\"text\"\n              className=\"popup__input\"\n              id=\"input-profile-title\"\n              minLength=\"2\"\n              maxLength=\"40\"\n              pattern=\"[A-Za-zА-Яа-яЁё\\s\\-]{1,}\"\n              required\n            />\n            <span\n              className=\"popup__error-text\"\n              id=\"input-profile-title-error\"\n            ></span>\n          </div>\n          <div className=\"popup__input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"О себе\"\n              type=\"text\"\n              className=\"popup__input\"\n              id=\"input-profile-subtitle\"\n              minLength=\"2\"\n              maxLength=\"200\"\n              required\n            />\n            <span\n              className=\"popup__error-text\"\n              id=\"input-profile-subtitle-error\"\n            ></span>\n          </div>\n        </fieldset>\n      </PopupWithForm>\n      <PopupWithForm\n        isOpen={isAddCardPopupOpen}\n        id=\"newcard-popup\"\n        size=\"large\"\n        title=\"Добавить место\"\n        close={closePopup}\n        submitButtonText=\"Добавить\"\n      >\n        <fieldset className=\"popup__fieldset\">\n          <div className=\"popup__input-wrapper\">\n            <input\n              type=\"text\"\n              placeholder=\"Название\"\n              type=\"text\"\n              className=\"popup__input\"\n              id=\"input-card-title\"\n              minLength=\"1\"\n              maxLength=\"30\"\n              required\n            />\n            <span\n              className=\"popup__error-text\"\n              id=\"input-card-title-error\"\n            ></span>\n          </div>\n          <div className=\"popup__input-wrapper\">\n            <input\n              type=\"url\"\n              placeholder=\"Ссылка на картинку\"\n              className=\"popup__input\"\n              id=\"input-card-link\"\n              required\n            />\n            <span\n              className=\"popup__error-text\"\n              id=\"input-card-link-error\"\n            ></span>\n          </div>\n        </fieldset>\n      </PopupWithForm>\n      <PopupWithImage\n        isOpen={selectedCard}\n        close={closePopup}\n        cardInfo={imageInfo}\n      />\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.697f7460.svg\";"],"sourceRoot":""}