{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithImage.js","components/PopupWithForm.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","utils/api.js","utils/constants.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","props","className","href","src","logo","alt","lang","CurrentUserContext","React","createContext","Card","currentUser","useContext","card","isOwn","owner","_id","cardDeleteButtonClassName","isLiked","likes","some","i","cardLikeButtonClassName","onClick","click","link","onCardDelete","name","onCardLike","type","length","Main","editAvatar","avatar","editProfile","about","addPlace","cards","map","key","showPic","handleCardLike","handleCardDelete","Footer","PopupWithImage","isOpen","id","cardInfo","close","PopupWithForm","size","onSubmit","noValidate","title","children","submitButtonText","EditProfilePopup","useState","setName","description","setDescription","useEffect","onClose","evt","preventDefault","onUserUpdate","target","reset","value","placeholder","minLength","maxLength","pattern","onChange","required","EditAvatarPopup","avatarRef","useRef","onAvatarUpdate","current","ref","AddPlacePopup","nameRef","linkRef","onAddPlace","api","baseUrl","headers","this","_baseUrl","_headers","res","ok","json","Promise","reject","status","fetch","then","_response","method","body","JSON","stringify","cardId","methodName","authorization","App","isEditAvatarPopupOpen","setAvatarPopupOpen","isEditProfilePopupOpen","setProfileEditPopupOpen","isAddPlacePopupOpen","setAddPlacePopupOpen","selectedCard","setSelectedCard","imageInfo","setImageInfo","setCurrentUser","setCards","closePopup","getUserInfo","user","catch","err","console","log","getDefaultCards","Provider","changeCardLikeStatus","newCard","newCards","c","deleteCard","filter","setUserAvatar","data","updateUserInfo","addNewPlace","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.0828cc9f.chunk.js","sourcesContent":["import React from 'react';\nimport logo from '../images/logo.svg';\n\nfunction Header(props) {\n  return (\n    <header className=\"header\">\n      <a href=\"https://realmxs.github.io/mesto-react/\">\n        <img className=\"logo\" src={logo} alt=\"Mesto Russia\" lang=\"en\" />\n      </a>\n    </header>\n  );\n}\n\nexport default Header\n","import React from 'react';\nexport const CurrentUserContext = React.createContext();\n","import React from 'react';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Card(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n  const card = props.card;\n\n  const isOwn = props.card.owner._id === currentUser._id;\n  const cardDeleteButtonClassName = (\n    `card__delete-button ${isOwn ? 'card__delete-button_active' : 'card__delete-button_inactive'}`\n  );\n\n  const isLiked = props.card.likes.some(i => i._id === currentUser._id);\n  const cardLikeButtonClassName = (\n    `card__like-button ${isLiked ? 'card__like-button_active' : 'card__like-button_inactive'}`\n  );\n\n  function clickOnCard() {\n    props.click(card)\n  }\n\n  function handleLikeClick() {\n    props.onCardLike(card)\n  }\n\n  function handleCardDelete() {\n    props.onCardDelete(card)\n  }\n\n  return (\n    <div className=\"card\">\n      <img onClick={clickOnCard} className=\"card__image\" alt=\"фото\" src={card.link} />\n      <button onClick={handleCardDelete} className={cardDeleteButtonClassName}></button>\n      <div className=\"card__info\">\n        <h2 className=\"card__title\">{card.name}</h2>\n        <div className=\"card__like-wrapper\">\n          <button onClick={handleLikeClick} className={cardLikeButtonClassName} type=\"button\"></button>\n          <p className=\"card__like-counter\">{card.likes.length}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card;\n","import React from 'react';\nimport Card from './Card.js';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\nfunction Main(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  return (\n    <main className=\"content\">\n      <section className=\"profile\">\n        <div className=\"profile__container\">\n          <button onClick={props.editAvatar} className=\"profile__avatar-button\">\n            <img\n              className=\"profile__avatar\"\n              alt=\"Ваше фото\"\n              src={currentUser.avatar}\n            />\n          </button>\n          <div className=\"profile__info\">\n            <div className=\"profile__wrapper\">\n              <h1 className=\"profile__title\">{currentUser.name}</h1>\n              <button\n                className=\"profile__edit-button\"\n                type=\"button\"\n                onClick={props.editProfile}\n              ></button>\n            </div>\n            <p className=\"profile__subtitle\">{currentUser.about}</p>\n          </div>\n        </div>\n        <button\n          className=\"open-newcard-popup-button\"\n          onClick={props.addPlace}\n        ></button>\n      </section>\n\n      <section className=\"cards-container\">\n        {props.cards.map((card) => (\n          <Card key={card._id} card={card} click={props.showPic} onCardLike={props.handleCardLike} onCardDelete={props.handleCardDelete} />\n        ))}\n      </section>\n    </main>\n  );\n}\n\nexport default Main;\n","import React from 'react';\n\nfunction Footer(props) {\n  return (\n    <footer className=\"footer\">\n      <p className=\"footer__copyright\" lang=\"en\">&copy;2020 Mesto Russia</p>\n    </footer>\n  )\n}\n\nexport default Footer\n","import React from 'react';\n\nfunction PopupWithImage(props) {\n  return (\n    <div className={`popup ${props.isOpen && 'popup_opened'}`} id=\"pic-popup\">\n      <div className=\"popup__wrapper\">\n        <img className=\"popup__image\" alt=\"фото\" src={props.cardInfo.link} />\n        <button onClick={props.close} className=\"popup__close-button\" id=\"close-picpopup\" type=\"button\"></button>\n        <h2 className=\"popup__image-title\">{props.cardInfo.name}</h2>\n      </div>\n    </div>\n  )\n}\n\nexport default PopupWithImage;\n","import React from 'react';\n\nfunction PopupWithForm(props) {\n  return (\n    <div className={`popup ${props.isOpen && 'popup_opened'}`} id={props.id}>\n      <form className={`popup__container popup__container_${props.size}`} onSubmit={props.onSubmit} noValidate>\n        <button className=\"popup__close-button\" id=\"close-avatar-popup-button\" type=\"button\" onClick={props.close}></button>\n        <h2 className=\"popup__title\">{props.title}</h2>\n        {props.children}\n        <button className=\"popup__submit-button\" type=\"submit\">{props.submitButtonText}</button>\n      </form>\n    </div>\n  )\n}\n\nexport default PopupWithForm;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\n\n\n\nfunction EditProfilePopup(props) {\n  const currentUser = React.useContext(CurrentUserContext);\n\n  const [name, setName] = React.useState([]);\n  const [description, setDescription] = React.useState([]);\n\n  React.useEffect(() => {\n    setName(currentUser.name);\n    setDescription(currentUser.about);\n  }, [currentUser]);\n\n  function handleNameChange(evt) {\n    setName(evt.target.value);\n  }\n\n  function handleDescriptionChange(evt) {\n    setDescription(evt.target.value);\n  }\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onUserUpdate(name, description);\n    evt.target.reset();\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={props.isOpen}\n      id=\"profile-edit-popup\"\n      size=\"large\"\n      title=\"Изменить данные\"\n      close={props.onClose}\n      submitButtonText=\"Сохранить\"\n      onSubmit={handleSubmit}\n    >\n      <fieldset className=\"popup__fieldset\">\n        <div className=\"popup__input-wrapper\">\n          <input\n            type=\"text\"\n            value={name || ''} // \"A component is changing an uncontrolled input of type text to be controlled\" fix\n            placeholder=\"Имя\"\n            className=\"popup__input\"\n            id=\"input-profile-title\"\n            minLength=\"2\"\n            maxLength=\"40\"\n            pattern=\"[A-Za-zА-Яа-яЁё\\s\\-]{1,}\"\n            onChange={handleNameChange}\n            required\n          />\n          <span\n            className=\"popup__error-text\"\n            id=\"input-profile-title-error\"\n          ></span>\n        </div>\n        <div className=\"popup__input-wrapper\">\n          <input\n            type=\"text\"\n            value={description || ''}   // \"A component is changing an uncontrolled input of type text to be controlled\" fix\n            placeholder=\"О себе\"\n            className=\"popup__input\"\n            id=\"input-profile-subtitle\"\n            minLength=\"2\"\n            maxLength=\"200\"\n            onChange={handleDescriptionChange}\n            required\n          />\n          <span\n            className=\"popup__error-text\"\n            id=\"input-profile-subtitle-error\"\n          ></span>\n        </div>\n      </fieldset>\n    </PopupWithForm>\n  )\n}\n\nexport default EditProfilePopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction EditAvatarPopup(props) {\n  const avatarRef = React.useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onAvatarUpdate(avatarRef.current.value);\n    evt.target.reset();\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={props.isOpen}\n      id=\"avatar-popup\"\n      size=\"medium\"\n      title=\"Обновить аватар\"\n      close={props.onClose}\n      submitButtonText=\"Обновить\"\n      onSubmit={handleSubmit}\n    >\n      <div className=\"popup__input-wrapper\">\n        <input\n          type=\"url\"\n          placeholder=\"Ссылка на изображение\"\n          className=\"popup__input\"\n          id=\"input-avatar-link\"\n          ref={avatarRef}\n          required\n        />\n        <span\n          className=\"popup__error-text\"\n          id=\"input-avatar-link-error\"\n        ></span>\n      </div>\n    </PopupWithForm>\n  );\n}\n\nexport default EditAvatarPopup;\n","import React from 'react';\nimport PopupWithForm from './PopupWithForm';\n\nfunction AddPlacePopup(props) {\n  const nameRef = React.useRef();\n  const linkRef = React.useRef();\n\n  function handleSubmit(evt) {\n    evt.preventDefault();\n    props.onAddPlace(nameRef.current.value, linkRef.current.value);\n    evt.target.reset();\n  }\n\n  return (\n    <PopupWithForm\n      isOpen={props.isOpen}\n      id=\"newcard-popup\"\n      size=\"large\"\n      title=\"Добавить место\"\n      close={props.onClose}\n      submitButtonText=\"Добавить\"\n      onSubmit={handleSubmit}\n    >\n      <fieldset className=\"popup__fieldset\">\n        <div className=\"popup__input-wrapper\">\n          <input\n            type=\"text\"\n            placeholder=\"Название\"\n            className=\"popup__input\"\n            id=\"input-card-title\"\n            minLength=\"1\"\n            maxLength=\"30\"\n            ref={nameRef}\n            required\n          />\n          <span\n            className=\"popup__error-text\"\n            id=\"input-card-title-error\"\n          ></span>\n        </div>\n        <div className=\"popup__input-wrapper\">\n          <input\n            type=\"url\"\n            placeholder=\"Ссылка на картинку\"\n            className=\"popup__input\"\n            id=\"input-card-link\"\n            ref={linkRef}\n            required\n          />\n          <span\n            className=\"popup__error-text\"\n            id=\"input-card-link-error\"\n          ></span>\n        </div>\n      </fieldset>\n    </PopupWithForm>\n  )\n}\n\nexport default AddPlacePopup;\n","import { loginInfo } from './constants.js'\n\nclass Api {\n  constructor({ baseUrl, headers }) {\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n  }\n\n  _response(res) {\n    if (res.ok) {\n      return res.json();\n    }\n    return Promise.reject(`error${res.status}`);\n  }\n\n  getUserInfo() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers,\n    }).then(this._response);\n  }\n\n  getDefaultCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers,\n    }).then(this._response);\n  }\n\n  updateUserInfo(name, description) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: name,\n        about: description,\n      }),\n    }).then(this._response);\n  }\n\n  addNewPlace(title, link) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify({\n        name: title,\n        link: link,\n      }),\n    }).then(this._response);\n  }\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers,\n    }).then(this._response);\n  }\n\n  changeCardLikeStatus(cardId, isLiked) {\n    let methodName = (isLiked === true ? 'PUT' : 'DELETE')\n    return fetch(`${this._baseUrl}/cards/likes/${cardId}`, {\n      method: methodName,\n      headers: this._headers,\n    }).then(this._response)\n  }\n\n  setUserAvatar(avatar) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatar,\n      }),\n    }).then(this._response);\n  }\n}\n\nexport const api = new Api(loginInfo)\n","export const loginInfo = {\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-12\",\n  headers: {\n    authorization: \"246d132c-15dc-4567-a2e3-3aa37ea260d6\",\n    \"Content-Type\": \"application/json\",\n  },\n};\n\n\n","import React from 'react';\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport PopupWithImage from './PopupWithImage.js';\nimport EditProfilePopup from './EditProfilePopup';\nimport EditAvatarPopup from './EditAvatarPopup';\nimport AddPlacePopup from './AddPlacePopup'\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\nimport { api } from '../utils/api.js';\n\nfunction App() {\n  const [isEditAvatarPopupOpen, setAvatarPopupOpen] = React.useState(false);\n  const [isEditProfilePopupOpen, setProfileEditPopupOpen] = React.useState(false);\n  const [isAddPlacePopupOpen, setAddPlacePopupOpen] = React.useState(false);\n  const [selectedCard, setSelectedCard] = React.useState(false);\n  const [imageInfo, setImageInfo] = React.useState({});\n  const [currentUser, setCurrentUser] = React.useState({});\n  const [cards, setCards] = React.useState([]);\n\n  React.useEffect(() => {\n    api\n      .getUserInfo()\n      .then((user) => {\n        setCurrentUser(user)\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  React.useEffect(() => {\n    api\n      .getDefaultCards()\n      .then((cards) => {\n        setCards(cards);\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n  }, []);\n\n  function handleAvatarClick() {\n    setAvatarPopupOpen(true);\n  }\n\n  function handleEditProfileClick() {\n    setProfileEditPopupOpen(true);\n  }\n\n  function handleAddPlacePopupClick() {\n    setAddPlacePopupOpen(true);\n  }\n\n  function closePopup() {\n    setAvatarPopupOpen(false);\n    setProfileEditPopupOpen(false);\n    setAddPlacePopupOpen(false);\n    setSelectedCard(false);\n  }\n\n  function handleCardClick() {\n    setSelectedCard(true);\n  }\n\n  const openPicPopup = (card) => {\n    handleCardClick();\n    setImageInfo(card);\n  };\n\n  function handleUserUpdate(name, description) {\n    api.updateUserInfo(name, description).then((data) => {\n      setCurrentUser({\n        ...currentUser,\n        name: data.name,\n        about: data.about\n      });\n      closePopup()\n    });\n  }\n\n  function handleAvatarUpdate(link) {\n    api.setUserAvatar(link).then((data) => {\n      setCurrentUser({\n        ...currentUser,\n        avatar: data.avatar\n      });\n      closePopup()\n    });\n  }\n\n  function handleAddNewPlace(name, link) {\n    api.addNewPlace(name, link).then((newCard) => {\n      setCards([newCard, ...cards]);\n      closePopup()\n    });\n  }\n\n  function handleCardLike(card) {\n    const isLiked = card.likes.some(i => i._id === currentUser._id);\n    api.changeCardLikeStatus(card._id, !isLiked).then((newCard) => {\n      const newCards = cards.map(c => c._id === card._id ? newCard : c);\n      setCards(newCards);\n    });\n  }\n\n  function handleCardDelete(card) {\n    api.deleteCard(card._id).then(() => {\n      const newCards = cards.filter(c =>\n        card._id !== c._id\n      );\n      setCards(newCards);\n    });\n  }\n\n  return (\n    <>\n      <CurrentUserContext.Provider value={currentUser}>\n        <Header />\n        <Main\n          editAvatar={handleAvatarClick}\n          editProfile={handleEditProfileClick}\n          addPlace={handleAddPlacePopupClick}\n          showPic={openPicPopup}\n          cards={cards}\n          handleCardLike={handleCardLike}\n          handleCardDelete={handleCardDelete}\n        />\n        <Footer />\n\n        <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closePopup} onAvatarUpdate={handleAvatarUpdate} />\n        <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closePopup} onUserUpdate={handleUserUpdate} />\n        <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closePopup} onAddPlace={handleAddNewPlace} />\n\n        <PopupWithImage\n          isOpen={selectedCard}\n          close={closePopup}\n          cardInfo={imageInfo}\n        />\n      </CurrentUserContext.Provider>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.697f7460.svg\";"],"sourceRoot":""}